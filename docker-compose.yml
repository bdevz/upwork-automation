version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: ardan_automation_db
    environment:
      POSTGRES_DB: ardan_automation
      POSTGRES_USER: ardan_user
      POSTGRES_PASSWORD: ardan_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ardan_user -d ardan_automation"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache and Queue
  redis:
    image: redis:7-alpine
    container_name: ardan_automation_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Server
  api:
    build: ./api
    container_name: ardan_automation_api
    environment:
      - DATABASE_URL=postgresql://ardan_user:ardan_pass@db:5432/ardan_automation
      - REDIS_URL=redis://redis:6379
      - BROWSERBASE_API_KEY=${BROWSERBASE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CREDENTIALS=${GOOGLE_CREDENTIALS}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./api:/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Interface
  web:
    build: ./web
    container_name: ardan_automation_web
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./web:/app
      - /app/node_modules

  # Background Worker
  worker:
    build: ./api
    container_name: ardan_automation_worker
    command: python -m worker.main
    environment:
      - DATABASE_URL=postgresql://ardan_user:ardan_pass@db:5432/ardan_automation
      - REDIS_URL=redis://redis:6379
      - BROWSERBASE_API_KEY=${BROWSERBASE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CREDENTIALS=${GOOGLE_CREDENTIALS}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./api:/app
      - ./shared:/app/shared
      - ./browser-automation:/app/browser_automation

  # Job Scheduler
  scheduler:
    build: ./api
    container_name: ardan_automation_scheduler
    command: python -m scheduler.main
    environment:
      - DATABASE_URL=postgresql://ardan_user:ardan_pass@db:5432/ardan_automation
      - REDIS_URL=redis://redis:6379
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./api:/app
      - ./shared:/app/shared

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: ardan_automation_n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=automation123
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=UTC
      - N8N_SECURE_COOKIE=false
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
  n8n_data: